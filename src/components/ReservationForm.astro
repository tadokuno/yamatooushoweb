---
// src/components/ReservationForm.astro
---

<div id="reservation-modal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3>イベント参加予約</h3>
      <button class="close-button" onclick="closeReservationModal()">&times;</button>
    </div>
    
    <form id="reservation-form" class="reservation-form">
      <div class="form-group">
        <label for="event-title">参加イベント</label>
        <input type="text" id="event-title" name="event_title" readonly>
      </div>
      
      <div class="form-group">
        <label for="event-date">開催日時</label>
        <input type="text" id="event-date" name="event_date" readonly>
        <small class="form-hint">※通常対局の場合は、ご希望の日時をメッセージ欄にご記入ください</small>
      </div>
      
      <div class="form-row">
        <div class="form-group">
          <label for="last-name">姓 <span class="required">*</span></label>
          <input type="text" id="last-name" name="lastname" required>
        </div>
        <div class="form-group">
          <label for="first-name">名 <span class="required">*</span></label>
          <input type="text" id="first-name" name="firstname" required>
        </div>
      </div>
      
      <div class="form-group">
        <label for="email">メールアドレス <span class="required">*</span></label>
        <input type="email" id="email" name="email" required>
      </div>
      
      <div class="form-group">
        <label for="phone">電話番号</label>
        <input type="tel" id="phone" name="phone">
      </div>
      
      <div class="form-group">
        <label for="skill-level">棋力</label>
        <select id="skill-level" name="skill_level">
          <option value="">選択してください</option>
          <option value="初心者">初心者</option>
          <option value="15級-10級">15級-10級</option>
          <option value="9級-6級">9級-6級</option>
          <option value="5級-1級">5級-1級</option>
          <option value="初段-三段">初段-三段</option>
          <option value="四段以上">四段以上</option>
        </select>
      </div>
      
      <div class="form-group">
        <label for="message">メッセージ・ご質問</label>
        <textarea id="message" name="message" rows="4" placeholder="何かご質問やご要望がございましたらお聞かせください"></textarea>
      </div>
      
      <div class="form-actions">
        <button type="button" class="cancel-button" onclick="closeReservationModal()">キャンセル</button>
        <button type="submit" class="submit-button">予約を送信</button>
      </div>
    </form>
    
    <div id="form-success" class="success-message" style="display: none;">
      <h3>予約を受付いたしました！</h3>
      <p>ご予約ありがとうございます。確認メールを送信いたしましたのでご確認ください。</p>
      <p>ご質問がございましたら、お気軽にお電話ください。</p>
      <p><strong>TEL: 090-8431-1107</strong></p>
      <button class="close-success-button" onclick="closeReservationModal()">閉じる</button>
    </div>
  </div>
</div>

<script>
  // HubSpotのポータルIDとフォームIDを設定（実際の値に変更してください）
  const HUBSPOT_PORTAL_ID = 'YOUR_PORTAL_ID';
  const HUBSPOT_FORM_ID = 'YOUR_FORM_ID';
  
  let currentEventData = {};

  function openReservationModal(eventTitle, eventDate, eventTime, eventId) {
    currentEventData = {
      id: eventId,
      title: eventTitle,
      date: eventDate,
      time: eventTime
    };
    
    document.getElementById('event-title').value = eventTitle;
    document.getElementById('event-date').value = `${eventDate} ${eventTime}`;
    document.getElementById('reservation-modal').style.display = 'flex';
    document.body.style.overflow = 'hidden';
  }

  // 一般予約（ホームページから）用の関数
  function openGeneralReservationModal() {
    currentEventData = {
      id: 'general_reservation',
      title: '通常対局・見学',
      date: '希望日をお聞かせください',
      time: '営業時間内'
    };
    
    document.getElementById('event-title').value = '通常対局・見学';
    document.getElementById('event-date').value = '希望日をお聞かせください（営業時間: 12:00-19:00）';
    document.getElementById('reservation-modal').style.display = 'flex';
    document.body.style.overflow = 'hidden';
  }

  // グローバルスコープに関数を追加
  window.openReservationModal = openReservationModal;
  window.openGeneralReservationModal = openGeneralReservationModal;

  function closeReservationModal() {
    document.getElementById('reservation-modal').style.display = 'none';
    document.body.style.overflow = 'auto';
    document.getElementById('reservation-form').style.display = 'block';
    document.getElementById('form-success').style.display = 'none';
    document.getElementById('reservation-form').reset();
  }

  // フォーム送信処理
  document.getElementById('reservation-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const submitButton = document.querySelector('.submit-button');
    
    // ボタンを無効化
    submitButton.textContent = '送信中...';
    submitButton.disabled = true;
    
    try {
      // Step 1: コンタクトを作成/更新
      const contactData = {
        properties: {
          firstname: formData.get('firstname'),
          lastname: formData.get('lastname'),
          email: formData.get('email'),
          phone: formData.get('phone') || ''
        }
      };

      // Step 2: HubSpot API を使用してコンタクトとDealを作成
      // 注意: 本番環境では、この処理はサーバーサイドで行う必要があります
      // フロントエンドからAPIキーを使用するのはセキュリティ上推奨されません
      
      // 代替案: Webhook URL を使用
      const webhookData = {
        // コンタクト情報
        firstname: formData.get('firstname'),
        lastname: formData.get('lastname'),
        email: formData.get('email'),
        phone: formData.get('phone') || '',
        
        // イベント情報（Deal用）
        event_title: formData.get('event_title'),
        event_datetime: formData.get('event_date'),
        participant_skill_level: formData.get('skill_level') || '',
        reservation_notes: formData.get('message') || '',
        
        // 追加情報
        source: 'website_event_reservation',
        page_url: window.location.href
      };

      // Webhookエンドポイントに送信（Zapier、Make、またはカスタムサーバー）
      const response = await fetch('/api/event-reservation', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(webhookData)
      });

      if (response.ok) {
        // 成功時の処理
        document.getElementById('reservation-form').style.display = 'none';
        document.getElementById('form-success').style.display = 'block';
        
        // Google Analytics イベント（もしあれば）
        if (typeof gtag !== 'undefined') {
          gtag('event', 'reservation_submitted', {
            event_category: 'form',
            event_label: currentEventData.title
          });
        }
      } else {
        throw new Error('送信に失敗しました');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('送信に失敗しました。お手数ですが、お電話でお申し込みください。\nTEL: 090-8431-1107');
    } finally {
      // ボタンを復元
      submitButton.textContent = '予約を送信';
      submitButton.disabled = false;
    }
  });

  // モーダル外クリックで閉じる
  document.getElementById('reservation-modal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeReservationModal();
    }
  });

  // ESCキーで閉じる
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeReservationModal();
    }
  });
</script>

<style>
  .modal {
    display: none;
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    padding: 20px;
  }

  .modal-content {
    background: white;
    border-radius: 10px;
    width: 100%;
    max-width: 600px;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 30px;
    border-bottom: 1px solid #eee;
  }

  .modal-header h3 {
    margin: 0;
    color: #333;
    font-size: 1.5rem;
  }

  .close-button {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #999;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-button:hover {
    color: #333;
  }

  .reservation-form {
    padding: 30px;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
  }

  .form-group {
    margin-bottom: 20px;
  }

  .form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
    color: #333;
  }

  .required {
    color: #d32f2f;
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    width: 100%;
    padding: 12px;
    border: 2px solid #ddd;
    border-radius: 5px;
    font-size: 16px;
    transition: border-color 0.3s;
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #d32f2f;
  }

  .form-group input[readonly] {
    background-color: #f5f5f5;
    color: #666;
  }

  .form-hint {
    font-size: 0.8rem;
    color: #666;
    margin-top: 5px;
    display: block;
  }

  .form-actions {
    display: flex;
    gap: 15px;
    justify-content: flex-end;
    margin-top: 30px;
  }

  .cancel-button,
  .submit-button {
    padding: 12px 24px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .cancel-button {
    background-color: #666;
    color: white;
  }

  .cancel-button:hover {
    background-color: #555;
  }

  .submit-button {
    background-color: #d32f2f;
    color: white;
  }

  .submit-button:hover {
    background-color: #b71c1c;
  }

  .submit-button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }

  .success-message {
    padding: 40px 30px;
    text-align: center;
  }

  .success-message h3 {
    color: #d32f2f;
    margin-bottom: 20px;
  }

  .success-message p {
    margin-bottom: 15px;
    line-height: 1.6;
    color: #555;
  }

  .close-success-button {
    background-color: #d32f2f;
    color: white;
    padding: 12px 30px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    margin-top: 20px;
  }

  .close-success-button:hover {
    background-color: #b71c1c;
  }

  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .modal {
      padding: 10px;
    }

    .modal-header {
      padding: 15px 20px;
    }

    .modal-header h3 {
      font-size: 1.3rem;
    }

    .reservation-form {
      padding: 20px;
    }

    .form-row {
      grid-template-columns: 1fr;
      gap: 0;
    }

    .form-actions {
      flex-direction: column;
    }

    .cancel-button,
    .submit-button {
      width: 100%;
    }

    .success-message {
      padding: 30px 20px;
    }
  }
</style>